<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc PUBLIC "-//IETF//DTD RFC 2629//EN"
"http://xml.resource.org/authoring/rfc2629.dtd" [
<!ENTITY RFC2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2617 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2617.xml">
<!ENTITY UMA PUBLIC "" "http://kantarainitiative.org/confluence/display/uma/Home">
<!ENTITY UMAreqs PUBLIC "" "http://kantarainitiative.org/confluence/display/uma/UMA+Requirements">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY RFC4627 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4627.xml">
]>
<rfc category="std" docName="draft-maler-oauth-umatrust-00b" ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc='yes' ?>

  <?rfc tocdepth='4' ?>

  <?rfc symrefs='yes' ?>

  <?rfc sortrefs='yes' ?>

  <?rfc compact='yes' ?>

  <?rfc subcompact='no' ?>

  <front>
    <title abbrev="UMA Core Protocol">Binding Obligations on User-Managed
    Access (UMA) Participants</title>

    <author fullname="Eve Maler" initials="E" role="editor" surname="Maler">
      <organization>XMLgrrl.com</organization>

      <address>
        <email>eve@xmlgrrl.com</email>
      </address>
    </author>

    <date day="17" month="May" year="2012" />

    <abstract>
      <t>The User-Managed Access (UMA) core protocol provides a method for
      users to control access to their protected resources, residing on any
      number of host sites, through an authorization manager that governs
      access decisions based on user policy. This document provides a
      contractual framework that defines the minimum obligations of parties
      that operate and use software that claims to conform to the UMA
      protocol. The overall goal of this framework is to support legal
      enforceability of any agreements made between the authorizing and
      requesting sides using UMA. The audience for this document includes
      technologists, legal professionals, and operators of UMA-conforming
      services.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction">
      <t>The User-Managed Access (UMA) core protocol <xref
      target="UMAcore"></xref> provides a method for users to control access
      to their protected resources, residing on any number of host sites,
      through an authorization manager that governs access decisions based on
      user policy. This document provides a contractual framework that defines
      the minimum obligations of parties that operate and use software that
      claims to conform to the UMA protocol. The overall goal of this
      framework is to support legal enforceability of any agreements made
      between the authorizing and requesting sides using UMA. The audience for
      this document includes technologists, legal professionals, and operators
      of UMA-conforming services.</t>

      <section title="Notational Conventions">
        <t>The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL NOT',
        'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'MAY', and 'OPTIONAL' in this
        document are to be interpreted as described in <xref
        target="RFC2119"></xref>.</t>

        <t>Other terms with specific definitions in this document are
        initial-capitalized. See <xref target="terminology-clauses"></xref>
        for the definitions of these terms and a list of abbreviations
        used.</t>
      </section>

      <section title="Sample Use Cases for Sharing Access to Resources">
        <t>UMA makes possible an end-to-end access sharing relationship
        between an Authorizing Party and a Requesting Party, with its primary
        goals being to constrain access according to the Authorizing Party's
        access policies and to encourage the Requesting Party to adhere to any
        obligations it consented to in the authorization process by raising
        the consequences for doing otherwise. Following are sample use cases
        that explore the potential differences in these obligations beyond the
        basic level represented in the contractual framework.<list
            style="hanging">
            <t hangText="Person-to-self sharing">Here, Alice is both an
            Authorizing Party and a Requesting Party. This use case describes
            most types of today's OAuth-mediated access, for example, when
            Alice introduces the Klout service to her Twitter account. She
            uses both services herself, and wants them to communicate together
            on her behalf. With UMA, Alice can potentially manage the entire
            set of such access connections from a single place rather than
            from Twitter and other online "home bases" separately. In this
            circumstance, it's unlikely Alice will want to impose stringent
            contract terms on herself.</t>

            <t hangText="Person-to-person sharing">Here, Alice is an
            Authorizing Party and Bob is a Requesting Party. Today, many Web
            2.0 sites offer some level of this control, but methods,
            strengths, and interfaces are inconsistent between sites and
            people are unable to reuse policies across sites. Alice can share
            Flickr photos with Bob by adding him to her Flickr friends list or
            family list or by mailing him a special link to a photo album, or
            Alice can add Bob as a friend on Facebook. With UMA, Alice can
            craft authorization policies that let Bob "qualify in" to get
            access to her photo album and even to other resources she manages
            at other sites, without her having to be present during this
            process.</t>

            <t hangText="Mediated person-to-organization sharing">Here, Alice
            is an Authorizing Party, the DentalCare company is a Requesting
            Party, and the company's office assistant Carl is a Requesting
            Party Agent. Alice wants to give her dentist's office, DentalCare,
            temporary access to her calendar to make it easier to schedule a
            series of root canal appointments. Carl might be the actual person
            acting on behalf of the dental practice who actually asks for and
            views Alice's calendar. With UMA, Alice can require Carl to prove
            he is acting on behalf of DentalCare before seeing her
            calendar.</t>

            <t hangText="Autonomous person-to-organization sharing">Here,
            Alice is an Authorizing Party and the Valley Vehicles car
            dealership is a Requesting Party. Alice has crafted a personal
            request for proposals or pRFP because she's in the market for a
            new car, and she's willing to let car dealerships in her region of
            the country see the pRFP and make her offers. With UMA, Valley
            Vehicles and other dealerships might use Web crawler services to
            go out and collect pRFPs, without human helpers, and these
            services might have to prove in automated fashion that they
            legitimately represent the right kind of business. Alice can also
            ensure each dealership agrees to her terms before seeing her
            pRFP.</t>
          </list></t>
      </section>

      <section title="How to Use the Contractual Framework">
        <t>The contractual framework in <xref target="clauses"></xref> applies
        to all Subjects that take part in UMA-based interactions. It forms the
        minimum set of obligations that these Subjects MUST accept in order to
        use UMA. The Subjects MAY adopt additional obligations, and MAY
        further refine or constrain the obligations listed here, but MUST NOT
        make these minimum obligations less strict.</t>

        <t>Each clause takes the following form: "[<spanx>Clause ID</spanx>].
        When [<spanx>protocol interaction takes place</spanx>], the [<spanx>obligated Subject</spanx>]
        gains an obligation to the [<spanx>expecting Subject</spanx>] to
        [<spanx>behave in a particular way</spanx>]." The clause ID uses the
        abbreviation T for terminology, R for Requesting Party, H for Host, AM
        for AM Operator, and AP for Authorizing Party respectively. Clauses
        are sometimes followed by non-normative explanatory comments, which
        are labeled with "Comments:", and open issues, which are labeled with
        "Issues:" and are meant to be resolved and removed before final
        publication.</t>

        <t>The various Subjects take on binding obligations by interacting
        with the others using software that claims to be UMA-conforming. These
        obligations come as a result of specific protocol interactions.
        Following are the key interactions that result in obligations, along
        with references to the relevant sections in <xref
        target="UMAcore"></xref> that define these interactions:<list
            style="symbols">
            <t>A Host responds to a Requester's access request: Section 3.</t>

            <t>An AM issues a protection API token (PAT) to a Host: Section
            2.3.</t>

            <t>An AM issues an authorization API token (AAT) to a Requester:
            Section 3.4.3.</t>

            <t>An AM issues a requester permission token (RPT) to a Requester:
            Section 3.4.4.</t>

            <t>An AM grants a permission to a Requesting Party with a 201
            response: Section 3.4.4.</t>

            <t>A Host checks the status of an RPT: Section 3.3.</t>

            <t>A Host registers a permission on behalf of a Requester: Section
            3.2.</t>

            <t>A Requester supplies claims to an AM: Section 3.5.</t>

            <t>A Requester successfully receives access: Section 3.1.3.</t>
          </list></t>
      </section>

      <section title="Obligations Not in the Scope of the Contractual Framework">
        <t>Requesting Party Agents and Requester Operators have no
        UMA-dictated obligations, though they might have obligations as part
        of contractual agreements with other UMA-related Subjects, for
        example, pairwise contracts or membership in trust frameworks.
        Additionally, Subjects that are directly UMA-related might have
        obligations between themselves in addition to the ones specified here.
        Following are some typical examples:<list style="symbols">
            <t>When an Authorizing Party registers for an account at a Host,
            the Authorizing Party might gain an obligation to the Host
            Operator to adhere to the Host Operator's terms of service
            (TOS).</t>

            <t>When a Requester registers with an AM for OAuth client
            credentials (for example, through an explicit approval process or
            through a passive "API-wrap" process), the Requester Operator
            might gain an obligation to the AM Operator (apart from any
            particular Requesting Party's usage of that Requester) to adhere
            to the AM Operator's TOS for API clients.</t>

            <t>When a Subject becomes a Requesting Party Agent for a
            Requesting Party (for example, through an employment agreement),
            the Requesting Party Agent might gain an obligation to adhere to
            any agent agreements in place in the Subject's UMA-related
            interactions performed on behalf of the Requesting Party.</t>

            <t>When a Requesting Party contracts with a Requester Operator to
            engage in UMA-related interactions on the Requesting Party's
            behalf, the Requester Operator might gain an obligation to adhere
            to the terms of that contract. For example, a car dealership may
            contract out to use a cloud service that crawls the Web looking
            for personal RFPs that meet the dealership's criteria, and want to
            impose confidentiality requirements.</t>

            <t>When a Requester accesses a protected resource at a Host, the
            Host Operator might gain an obligation to the Requester Operator
            to be trustworthy as a source of the expected data. For example,
            in a scenario where the Requesting Party is also the Authorizing
            Party and is trying to fill in an online loan application through
            an online financial service (the Requester), where the Host
            Operator provides credit risk data about the Authorizing User, the
            Requester Operator will want to authenticate the Host service in
            some fashion.</t>
          </list></t>
      </section>
    </section>

    <section anchor="clauses" title="Binding Obligations on UMA Participants">
      <section anchor="terminology-clauses" title="Terminology">
        <t><spanx style="strong">T1.</spanx> This specification uses the
        following terms. Where terms are used without capitalization and are
        not otherwise defined in the <xref target="UMAcore"></xref>, they are
        used in their normal sense.<list hangIndent="6" style="hanging">
            <t hangText="Individual"><vspace />A natural person (that is, a
            human being) with the capacity to take on contractual duties and
            obligations as a participant in an UMA interaction.</t>

            <t hangText="Non-Person Entity (NPE"><vspace />A legal person
            (such as a corporation) with the capacity to take on contractual
            duties and obligations as a participant in an UMA interaction.</t>

            <t hangText="Subject"><vspace />An Individual or NPE. Subjects
            play various roles in achieving and seeking user-managed access,
            and the same Subject might serve in multiple contractual
            roles.</t>

            <t hangText="Conformance"><vspace />Claimed compliance of a
            running software program or service with the requirements of the
            UMA core protocol, as defined in its specification. Software
            components play various roles in participating in the technical
            interactions necessary to achieve and seek user-managed access,
            and the same software component might serve in multiple technical
            roles.</t>

            <t hangText="Authorizing Party"><vspace />A Subject that files the
            "authorizing user" role as defined in the UMA core protocol, using
            and configuring software services that variously fill the "AM" and
            "host" roles in the protocol. This Subject is the "user" in
            "User-Managed Access"; UMA's first priority is to enable
            Individuals to serve in the Authorizing Party role, though NPEs
            can serve in this role as well.</t>

            <t hangText="Authorization Manager (AM)"><vspace />A software
            service that fills the "authorization manager (AM)" role as
            defined in the UMA core protocol.</t>

            <t hangText="Authorization Manager (AM) Operator"><vspace />A
            Subject responsible for running and operating an AM.</t>

            <t hangText="Host"><vspace />A software service that fills the
            "host" role as defined in the UMA core protocol.</t>

            <t hangText="Host Operator"><vspace />A Subject responsible for
            running and operating a Host.</t>

            <t hangText="Requester"><vspace />A software application or
            service that fills the "requester" role as defined in the UMA core
            protocol.</t>

            <t hangText="Requester Operator"><vspace />A Subject responsible
            for running and operating a Requester.</t>

            <t hangText="Requesting Party"><vspace />A Subject that uses a
            Requester to seek access to a protected resource. This Subject may
            be an Individual or an NPE. The Requesting Party and the
            Authorizing Party may be the same Subject or different
            Subjects.</t>

            <t hangText="Requesting Party Agent"><vspace />A Subject using a
            Requester to seek access to a protected resource on behalf of a
            Requesting Party. Typically this Subject is an Individual acting
            on behalf of an NPE.</t>
          </list></t>

        <t>Comments: The <xref target="UETA"></xref> defines two terms that
        are particularly relevant to understanding the interactions among UMA
        participants:<list style="symbols">
            <t>"'Automated transaction' means a transaction conducted or
            performed, in whole or in part, by electronic means or electronic
            records, in which the acts or records of one or both parties are
            not reviewed by an individual in the ordinary course in forming a
            contract, performing under an existing contract, or fulfilling an
            obligation required by the transaction."</t>

            <t>"'Electronic agent' means a computer program or an electronic
            or other automated means used independently to initiate an action
            or respond to electronic records or performances in whole or in
            part, without review or action by an individual."</t>
          </list>Where a Requester is used by a human Requesting Party or a
        human Requesting Party Agent, at times human-computer interaction
        (HCI) will be required, but otherwise the access-attempt transaction
        is likely to be fully automatic from the perspective of the
        "requesting side". Furthermore, where the Authorizing Party and the
        Requesting Party are the same natural person, or where the Authorizing
        Party has set a policy that requires real-time approval through some
        out-of-band method, this person can expect to engage in HCI. Otherwise
        the access-attempt transaction is likely to be fully automatic from
        the perspective of the "authorizing side" because the access attempt
        is made without any requirement for the Authorizing Party to be
        present at run time.</t>

        <t>The National Strategy for Trusted Identities in Cyberspace <xref
        target="NSTIC"></xref> defines some terms similar to those defined
        here:<list style="symbols">
            <t>"An individual is a person engaged in an online transaction.
            Individuals are the first priority of the Strategy."</t>

            <t>"A non-person entity (NPE) may also require authentication in
            the Identity Ecosystem. NPEs can be organizations, hardware,
            networks, software, or services and are treated much like
            individuals within the Identity Ecosystem. NPEs may engage in or
            support a transaction."</t>

            <t>"The subject of a transaction may be an individual or an
            NPE."</t>
          </list></t>

        <t>UMA shares with NSTIC a priority to enable and empower individual
        people in the context of their online interactions. Note that this
        framework uses the terms Individual, NPE, and Subject exclusively for
        parties that have the capacity to take on contractual obligations,
        distinguishing them "from hardware, networks, software, or services",
        which do not have this capacity.</t>

        <t><spanx style="strong">T2.</spanx> This specification uses the
        following abbreviations.<list style="hanging">
            <t hangText="UMA">User-Managed Access, the interoperability
            protocol defined by the UMA core protocol specification and the
            other specifications it includes by reference.</t>

            <t hangText="API">Application programming interface.</t>

            <t hangText="AAT">Authorization API token, as defined in the UMA
            core protocol.</t>

            <t hangText="PAT">Protection API token, as defined in the UMA core
            protocol.</t>

            <t hangText="RPT">Requester permission token, as defined in the
            UMA core protocol.</t>
          </list></t>

        <t>Comments: The AAT is a data structure that is specific to the UMA
        core protocol roles AM, requester, and requesting party. The PAT is a
        data structure that is specific to the UMA core protocol roles AM,
        host, and authorizing user. The RPT is a data structure that is
        specific to the UMA core protocol roles AM, host, authorizing user,
        requester, and requesting party.</t>
      </section>

      <section title="Obligations of the Requesting Party">
        <t><spanx style="strong">R1.</spanx> When the Requester successfully
        receives access from a Host to a protected resource by wielding a
        valid requester permission token with a currently valid permission for
        the type of access sought, the Requesting Party gains a) an obligation
        to the Authorizing Party to adhere to promises it made in order to get
        access authorization granted, and b) a further obligation to the
        Authorizing Party not to delegate to third-party Subjects a wider
        scope of access rights to the same resource than the Requesting Party
        itself was authorized for.</t>

        <t>Comments: At a previous stage, the Requesting Party asked for a
        relevant permission from the AM and might have had to provide
        "promissory" claims asserting willingness, for example, to adhere to
        data usage constraints imposed by the user. This is precisely the
        end-to-end access authorization agreement that UMA exists to forge.
        Accepting access to the protected resource binds the Requesting Party
        to the terms it agreed to, for example, only reading the resource
        rather than modifying it, or selling the data it contains if it agreed
        not to. The downstream restriction on scope of access is an attempt to
        put "chain-link confidentiality" (and other chain-linked constraints)
        into effect, as discussed in <xref target="ChainLink"></xref>.</t>

        <t>Issues: Note that the obligation goes into effect the first time a
        Requester gains access under the power of a "currently valid
        permission". If there was more than one valid permission attached to
        different sets of promises, without a record (kept by the Host and/or
        AM) of which permission it used for granting access, ambiguity is
        introduced. Also note that this analysis presumes the "UMA bearer
        token profile"; the use of other profiles might lessen the potential
        ambiguity.</t>

        <t><spanx style="strong">R2.</spanx> When the AM issues an AAT to a
        Requester, the Requesting Party using that Requester gains an
        obligation to the AM Operator to truthfully supply any self-asserted
        claims required for access authorization at this AM.</t>

        <t>Comments: At a later stage, the Requesting Party might be asked to
        provide claims to support authorization processes at this AM, for
        accessing all resources protected by this AM, managed by any
        Authorizing Parties.The Requesting Party's responsibility to provide
        truthful claims in all these cases begins now. The Requesting Party
        can remove this obligation by revoking the AAT.</t>

        <t><spanx style="strong">R3.</spanx> When the Requesting Party
        provides claims to an AM to satisfy the AM's authorization process,
        the Requesting Party gains an obligation to the AM Operator to
        truthfully supply any claims required for access authorization for the
        requested permission.</t>

        <t>Comments: This clause is specific to the action of providing actual
        claims, as opposed to clause R2. Where the Requesting Party supplies
        claims in a form that can be verified by the AM, the risk imposed by
        this need for "trust" can be reduced. Note that UMA defines an "OpenID
        Connect claim profile" that provides one way to collect trusted claims
        from third-party claim providers.</t>

        <t>Issues: Is this clause really about an obligation to the AM
        Operator, or ultimately to the Authorizing Party? Claims gathered at
        this moment could, for example, be promissory: "I agree not to release
        this data publicly until after embargo date XYZ." Would this just be a
        repeat of clause R1? Do we even need R3 giaven that we have R1 and R2
        in the mix?</t>

        <t><spanx style="strong">R4.</spanx> When the AM issues an RPT to a
        Requester, the Requesting Party using that Requester gains an
        obligation to the Host Operator to represent the legitimate bearer of
        the requester permission token whenever it presents this token to the
        Host.</t>

        <t>Comments: In the case where the "bearer" UMA token profile is being
        used, the token cannot be bound in any meaningful way to the specific
        requester and requesting party it applies to, so the Requesting Party
        takes on the obligation of protecting the RPT from theft and not
        maliciously sharing the RPT to be used by others. Defining and using
        different UMA token profiles can mitigate the risk of a failure on the
        Requesting Party's part.</t>
      </section>

      <section title="Obligations of the Host Operator">
        <t><spanx style="strong">H1.</spanx> When the AM issues a PAT to a
        Host, the Host Operator gains an obligation to the Authorizing Party
        to outsource authorization to the AM Operator for the set of
        protectable resources for which it represents this capability to the
        Authorizing Party, and to respect the access constraints represented
        by the permissions generated by the AM.</t>

        <t>Comments: Once the AM Operator becomes the Authorizing Party's
        authorization proxy, it begins relying on the Host Operator in other,
        more specific ways. The Host has the opportunity to inspect AM-issued
        permissions at a later stage, but its responsibility for respecting
        them begins now. The Authorizing Party can remove this obligation by
        revoking the PAT.</t>

        <t><spanx style="strong">H2.</spanx> When the AM issues a PAT to the
        Host, the Host Operator gains an obligation to the AM Operator to
        register resource sets and applicable actions accurately and timely
        according to the Authorizing Party&rsquo;s expressed instructions for
        protection.</t>

        <t>Comments: At a later stage, the Host has the opportunity to
        register resource sets, but its responsibility for performing this
        task begins now. The Authorizing Party can remove this duty by
        revoking the PAT. The Host Operator may have contracted with the
        Authorizing Party for service-level agreements to respond specifically
        to timeliness needs and so on.</t>

        <t><spanx style="strong">H3.</spanx> When the Host checks the status
        of an RPT, the Host Operator gains an obligation to the AM Operator to
        respect the status of permissions granted by the AM in allowing or
        disallowing access by the Requester.</t>

        <t>Comments: The Host Operator, as a Subject that is otherwise
        potentially not obligated to the AM Operator at all, carries a great
        deal of responsibility here not to allow access where the AM has not
        granted permission and to make every effort to grant access where the
        AM has granted permission. Its interpretation of scopes and
        permissions is not directly auditable by the AM. Further, issues can
        arise from the skew between permission validity periods and actual
        access. Defining and using different UMA token profiles can mitigate
        the risk of failure on the Host Operator's part.</t>

        <t>Issues: Currently, this clause is somewhat specific to the UMA
        "bearer" token profile. Should the wording be softened to accommodate
        a variety of token profile scenarios? Should it be softened and then
        followed by a sub-clause that is specific to this token profile?</t>

        <t><spanx style="strong">H4.</spanx> When the Host responds in any
        fashion to a Requester's access request, the Host Operator gains an
        obligation to the Requesting Party to give accurate access to the
        protected resource according to whether the Requesting Party has
        permission to do so.</t>

        <t>Comments: The Host Operator, as a Subject that is otherwise
        potentially not obligated to the AM Operator at all, carries a great
        deal of responsibility here to make every effort to grant access where
        the AM has granted permission. Its interpretation of scopes and
        permissions is not directly auditable by the requester or AM. Further,
        issues can arise from the skew between permission validity periods and
        actual access. Defining and using different UMA token profiles can
        mitigate the risk of failure on the Host Operator's part.</t>

        <t>Issues: Currently, this clause is somewhat specific to the UMA
        "bearer" token profile. Should the wording be softened to accommodate
        a variety of token profile scenarios? Should it be softened and then
        followed by a sub-clause that is specific to this token profile?</t>
      </section>

      <section title="Obligations of the AM Operator">
        <t><spanx style="strong">AM1.</spanx> When the AM issues a PAT to the
        Host, the AM Operator gains an obligation to the Authorizing Party to
        represent the Authorizing Party's policies accurately and timely in
        granting permissions.</t>

        <t>Comments: At a later stage, the AM will require the Host to present
        the PAT whenever it uses the AM&rsquo;s protection API on behalf of
        this Authorizing Party. The Authorizing Party can remove this
        obligation by revoking the PAT. The AM Operator may have contracted
        with the Authorizing Party for service-level agreements to respond
        specifically to timeliness needs and so on.</t>

        <t><spanx style="strong">AM2.</spanx> When the Host registers a
        permission at the AM, the AM Operator gains an obligation to the Host
        Operator to represent the Authorizing Party&rsquo;s authorization
        policies accurately and timely in granting permissions.</t>

        <t>Comments: At a later stage, when a Requester approaches the AM
        seeking a previously registered permission, the AM matches Authorizing
        Party policies to the requested permission to drive any requests for
        claims and its ultimate permission grants, but its responsibility for
        performing this task begins now.</t>

        <t><spanx style="strong">AM3.</spanx> When the AM issues an AAT to a
        Requester, the AM Operator gains an obligation to the Requesting Party
        to request only claims that support the purpose of satisfying the
        user's policy.</t>

        <t>Comments: At a later stage, the AM might ask the Requesting Party
        to provide claims for specific permission purposes, but its
        responsibility begins now. The Requesting Party can remove this duty
        by revoking the AAT. When it is possible in OAuth to perform token
        revocation, the Requester Operator can remove this duty itself by
        revoking the AAT.</t>

        <t>Issues: Currently, this clause is somewhat specific to the UMA
        "bearer" token profile. Should the wording be softened to accommodate
        a variety of token profile scenarios? Should it be softened and then
        followed by a sub-clause that is specific to this token profile?</t>
      </section>

      <section title="Obligations of the Authorizing Party">
        <t><spanx style="strong">AP1.</spanx> When the AM grants a permission
        to a Requester, the Authorizing Party gains an obligation to the
        Requesting Party using that Requester to respect the boundaries of
        data usage constraints placed on the Requesting Party in the form of
        requests for claims driven by the Authorizing Party's policy at the
        AM.</t>

        <t>Comments: For example, the Authorizing User cannot subsequently
        protest or sue the Requesting Party for resale of the user&rsquo;s
        data if this was allowed by the terms of the granted permission.</t>

        <t>Issues: Currently, this clause is somewhat specific to the UMA
        "bearer" token profile. Should the wording be softened to accommodate
        a variety of token profile scenarios? Should it be softened and then
        followed by a sub-clause that is specific to this token profile?</t>

        <t><spanx style="strong">AP2.</spanx> When the AM issues a PAT to a
        Host, the Authorizing Party gains an obligation to the AM Operator to
        introduce the desired Host to this AM in outsourcing protection of
        this host's resources.</t>

        <t>Comments: How the Host learned of the AM's location is out of band
        for UMA; it is the Authorizing Party's responsibility to check that it
        has been redirected to an acceptable AM before the AM successfully
        issues the PAT. The Authorizing Party can remove this obligation by
        revoking the PAT.</t>

        <t><spanx style="strong">AP3.</spanx> When the AM issues a PAT to a
        Host, the Authorizing Party gains an obligation to the Host Operator
        to introduce the desired AM to this Host in outsourcing protection of
        this host's resources.</t>

        <t>Comments: Once the AM Operator becomes the Authorizing
        Party&rsquo;s authorization proxy, the Host Operator begins relying on
        it in other, more specific ways. How the Authorizing Party indicated
        the desired AM to the host is out of band for UMA; it is the
        Authorizing Party's responsibility to check that it has been
        redirected to an acceptable AM before the AM successfully issues the
        PAT. The Authorizing Party can remove this obligation by revoking the
        PAT.</t>
      </section>
    </section>

    <section title="Issues">
      <t>Following are general open issues on this specification. See also the
      clause-specific issues above.<list style="numbers">
          <t>When we finish revising Section 3.4.x around the RPT and
          permission endpoints, we should be sure to check and revise the
          mention of "An AM grants a permission to a Requesting Party with a
          201 response: Section 3.4.4." as required.</t>

          <t>Is there reason to define Authorizing Party Agent (parallel with
          Requesting Party Agent) for enterprise UMA case cases where the user
          is acting on behalf of their company?</t>
        </list></t>
    </section>

    <section anchor="Acknowledgments" title="Acknowledgments">
      <t>The current editor of this specification is Eve Maler of XMLgrrl.com.
      The following people are co-authors:<list style="symbols">
          <t>Domenico Catalano, Oracle Corp.</t>

          <t>Kevin Cox, Edentiti</t>

          <t>Sal D'Agostino, IDmachines</t>

          <t>Susan Morrow, Avoco Secure</t>
        </list></t>

      <t>Additional contributors to this specification include the Kantara UMA
      Work Group participants, a list of whom can be found at <xref
      target="UMAnitarians"></xref>. The co-authors and contributors thank
      Scott David, Dazza Greenwood, and Tom Smedinghoff for offering their
      legal expertise and insight in the preparation of this
      specification.</t>
    </section>

    <section title="Change History">
      <t>The following changes were made from 00a to 00b:<list style="symbols">
          <t>Terminology went from Entity to Individual, Non-Person Entity
          (NPE), and Subject. NSTIC document referenced as part of this
          change.</t>

          <t>Doc now consistently refers to itself as a "document" (not a
          specification) with a "contractual framework" embedded within
          it.</t>

          <t>Removed "constellation" language as not adding value.</t>

          <t>Removed the single Requester Operator clause since it's already
          covered in the out-of-scope obligations section.</t>

          <t>Added clause-specific issues.</t>

          <t>Removed stray mentions of "duties" (vs. "obligations").</t>

          <t>Removed mentions of autonomous token revocation. When OAuth
          standardizes this, we can account for it.</t>

          <t>Clauses generally cleaned up and made more consistent.</t>
        </list></t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml' ?>

      <reference anchor="UMAcore"
                 target="http://docs.kantarainitiative.org/uma/draft-uma-core.html">
        <front>
          <title>User-Managed Access (UMA) Core Protocol</title>

          <author initials="T." surname="Hardjono">
            <organization>MIT</organization>
          </author>

          <date day="30" month="April" year="2012" />
        </front>
      </reference>
    </references>

    <references title="Informative References">
      <reference anchor="UMAnitarians"
                 target="http://kantarainitiative.org/confluence/display/uma/Participant+Roster">
        <front>
          <title>UMA Participant Roster</title>

          <author initials="E." surname="Maler">
            <organization>Maler</organization>
          </author>

          <date year="2012" />
        </front>
      </reference>

      <reference anchor="UETA"
                 target="http://www.law.upenn.edu/bll/archives/ulc/fnact99/1990s/ueta99.htm">
        <front>
          <title>Uniform Electronic Transactions Act</title>

          <author initials="T." surname="Smedinghoff">
            <organization>National Conference of Commissioners on Uniform
            State Laws</organization>
          </author>

          <date year="1999" />
        </front>
      </reference>

      <reference anchor="ChainLink"
                 target="http://cyberlaw.stanford.edu/publications/chain-link-confidentiality">
        <front>
          <title>Chain-Link Confidentiality</title>

          <author initials="W." surname="Hartzog">
            <organization>The Center for Internet and Society</organization>
          </author>

          <date day="24" month="April" year="2012" />
        </front>
      </reference>

      <reference anchor="NSTIC"
                 target="http://www.whitehouse.gov/sites/default/files/rss_viewer/NSTICstrategy_041511.pdf">
        <front>
          <title>National Strategy for Trusted Identities in
          Cyberspace</title>

          <author initials="" surname="">
            <organization>US Federal Government</organization>
          </author>

          <date day="15" month="April" year="2011" />
        </front>
      </reference>
    </references>

    <section anchor="History" title="Document History">
      <t>NOTE: To be removed by RFC editor before publication as an RFC.</t>
    </section>
  </back>
</rfc>
